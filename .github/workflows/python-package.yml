# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Spotmusic backend Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # UnitTest:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2

  #     - name: Setup Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.10'

  #     - name: Install Requirements
  #       run:  pip install flask coverage pytest flask-wtf

  #     - name: Unit Test
  #       run: |
  #         coverage run -m pytest test.py
  #         coverage xml app.py


  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2        
        
      - name: Docker Login
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: | 
          echo '${{ secrets.GOOGLE_CREDENTIALS }}' > key.json
          cat key.json | docker login -u _json_key --password-stdin https://us-central1-docker.pkg.dev/
          
      - name: Build Image & Push
        env: 
          ARTIFACT_REGISTRY: ${{ secrets.ARTIFACT_REGISTRY }}
        run: | 
          docker build -t ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest .
          docker push ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest

  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Clone do repo
        uses: actions/checkout@v2
        
      - name: Autenticao no GCP
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
          
      - name: Deploy no Cloud Run
        id: deploy
        run: |-
          gcloud run deploy backend \
            --quiet \
            --region ${{ secrets.GOOGLE_REGION }} \
            --image ${{ secrets.ARTIFACT_REGISTRY }}/backend:latest \
            --platform managed \
            --set-env-vars CLOUD_SQL_CONNECTION_NAME=${{ secrets.CLOUD_SQL_CONNECTION_NAME }}, CLOUD_SQL_DATABASE_NAME=${{ secrets.CLOUD_SQL_DATABASE_NAME }}, CLOUD_SQL_USERNAME=${{ secrets.CLOUD_SQL_USERNAME }}, CLOUD_SQL_PASSWORD=${{ secrets.CLOUD_SQL_PASSWORD }}, DB_LOCAL_HOST=${{ secrets.DB_LOCAL_HOST }},
            --allow-unauthenticated \
            --add-cloud-instances ${{ secrets.CLOUD_SQL_CONNECTION_NAME }}
            --project ${{ secrets.GOOGLE_PROJECT_ID }} \
            --format json
      
      
